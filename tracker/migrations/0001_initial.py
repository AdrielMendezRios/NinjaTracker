# Generated by Django 3.1.2 on 2020-11-06 15:18

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dojo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dojo_name', models.CharField(max_length=50)),
                ('dojo_address', models.CharField(default='N/A', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Ninja',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ninja_name', models.CharField(max_length=50)),
                ('ninja_age', models.IntegerField()),
                ('scratch_username', models.CharField(default='Request info', max_length=50, verbose_name='Scratch username')),
                ('scratch_password', models.CharField(default='Request info', max_length=50, verbose_name='Scratch password')),
                ('date_registered', models.DateTimeField(verbose_name='Date Registered')),
                ('parent_name', models.CharField(default='Request info', max_length=50)),
                ('parent_email', models.EmailField(default='Request@Info.com', max_length=254)),
                ('ninja_allergies', models.CharField(default='Request info', max_length=50, verbose_name='Ninja Allergies, if none enter NONE')),
                ('ninja_disposition', models.CharField(default='Request info', max_length=100)),
                ('ninja_likes', models.CharField(default='Request info', max_length=100)),
                ('ninja_dislikes', models.CharField(default='Request info', max_length=100)),
                ('current_belt', models.CharField(choices=[('White', 'White Belt'), ('Yellow', 'Yellow Belt'), ('Orange', 'Orange Belt'), ('Green', 'Green Belt'), ('Blue', 'Blue Belt'), ('Purple', 'Purple Belt'), ('Brown', 'Brown Belt'), ('Red', 'Red Belt'), ('Black', 'Black Belt')], default='White', max_length=20)),
                ('home_dojo', models.CharField(choices=[('Wake Forest', 'Wake Forest'), ('Holly Springs', 'Holly Springs'), ('Raleigh', 'Raleigh')], default='Wake Forest', max_length=20)),
                ('ninja_package', models.CharField(choices=[('Create Standard', 'Create 8 hrs per month'), ('Create Lite', 'Create 4 hrs per month')], default='Create Lite', max_length=50)),
                ('dojo', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='tracker.dojo')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateTimeField(auto_now_add=True)),
                ('session_duration', models.IntegerField()),
                ('session_assignment', models.CharField(max_length=100)),
                ('session_notes', models.CharField(max_length=500)),
                ('session_sensei', models.CharField(max_length=50)),
                ('ninja', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='tracker.ninja')),
                ('session_dojo', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='tracker.dojo')),
            ],
            options={
                'get_latest_by': 'session_date',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('is_director', models.BooleanField(default=False)),
                ('is_lead', models.BooleanField(default=False)),
                ('is_sensei', models.BooleanField(default=True)),
                ('home_dojo', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='tracker.dojo')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
